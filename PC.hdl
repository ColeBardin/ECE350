/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 * 
 * Author: Naga Kandasamy
 * Date created: July 14, 2020
 * 
 * Student name(s): Cole Bardin
 * Date modified: 7/17/2023
 *
 * Notes: Project from the book "The Elements of Computing Systems" by Nisan and Schocken, MIT Press.
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Inc16(in=PC, out=PCp1); // PC+1
    Mux16(a=PC, b=PCp1, sel=inc, out=dinc); // handle inc input
    Mux16(a=dinc, b=in, sel=load, out=dload); // handle load input
    Mux16(a=dload, b=false, sel=reset, out=data); // handle reset input
    Register(in=data, load=true, out=PC, out=out); // store data into register
    // TODO: complete implementation of the 16-bit program counter.
}
